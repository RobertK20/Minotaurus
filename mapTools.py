"""
Created on Fri Dec 11 19:33:07 2020

@author: Robert Kerr

Minotaur map builder

Contains map layout template, colours
"""

def r(entries):
    row = [1]
    state = True
    for i in entries:
        for x in range(i):
            if state==True:
                row.append(0)
            else:
                row.append(1)
        state = not state
    row.append(1)
    return row
      
fixedWalls = [r([0,30]),
           r([30]),
          r([30]),
          r([5,3,2,4,2,4,2,3,5]),
          r([5,1,4,1,8,1,4,1,5]),
          r([10,1,8,1,10]),
          r([8,3,8,3,8]),
          r([5,1,7,1,2,1,7,1,5]),
          r([2,4,7,1,2,1,7,4,2]),
          r([5,1,6,2,2,2,6,1,5]),
          r([30]),
          r([30]),
          r([2,4,2,4,2,2,2,4,2,4,2]),
          r([2,1,2,1,2,1,12,1,2,1,2,1,2]),
          r([2,1,2,1,2,1,12,1,2,1,2,1,2]),
          r([11,1,2,2,2,1,11]),
          r([11,1,2,2,2,1,11]),
          r([2,1,2,1,2,1,12,1,2,1,2,1,2]),
          r([2,1,2,1,2,1,12,1,2,1,2,1,2]),
          r([2,4,2,4,2,2,2,4,2,4,2]),
          r([30]),
          r([30]),
          r([5,1,6,2,2,2,6,1,5]),
          r([2,4,7,1,2,1,7,4,2]),
          r([5,1,7,1,2,1,7,1,5]),
          r([8,3,8,3,8]),
          r([10,1,8,1,10]),
          r([5,1,4,1,8,1,4,1,5]),
          r([5,3,2,4,2,4,2,3,5]),
          r([30]),
          r([30]),
          r([0,30])]

walls = [[[3,4],[3,5]],[[28,4],[28,5]],
         [[9,9],[10,9]],[[21,9],[22,9]],
         [[9,22],[10,22]],[[21,22],[22,22]],
         [[3,26],[3,27]],[[28,26],[28,27]]]
        
startpoints= [[[1,1],[1,2],[2,1]],
           [[29,1],[30,1],[30,2]],
           [[1,29],[2,30],[1,30]],
           [[29,30],[30,29],[30,30]]]

finishpoints = [[[14,14],[15,14],[14,15]],
                [[16,14],[17,14],[17,15]],
                [[14,16],[14,17],[15,17]],
                [[16,17],[17,17],[17,16]]]

minoStartpoints=[[14,13],[15,13],[16,13],[17,13],
                 [13,14],[13,15],[13,16],[13,17],
                 [18,14],[18,15],[18,16],[18,17],
                 [14,18],[15,18],[16,18],[17,18]]

class colour:
    def __init__(self):
        #Defining colours used on board
        self.darkGreen = (0,100,100)
        self.lightGreen = (128,255,0)
        self.blue = (0,128,255)
        self.red = (255,0,0)
        self.yellow = (255,255,0)
        self.white = (250,250,250)
        self.grey = (192,192,192)
        self.darkGrey = (100,100,100)
        self.black = (10,10,10)
        self.magenta = (128,0,128)
        
colours = colour()